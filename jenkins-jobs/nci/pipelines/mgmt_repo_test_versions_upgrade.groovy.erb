env.DIST = "<%= distribution %>"
env.TYPE = "<%= type %>"
env.PWD_BIND = '/workspace'

notify {
  // Run on persistent machines. This can take quite a while.
  cleanNode('amd64 && persistent') {
    stage('test') {
      try {
        git changelog: false, url: 'https://github.com/pangea-project/pangea-tooling.git'
        sh '~/tooling/git_submodule_setup.sh'
        sh '~/tooling/nci/contain.rb /workspace/nci/repo_test_upgrade_versions.rb -v'
      } finally {
        junit '*.xml'
      }
    }
  }
}

def notify(body) {
    try {
        body()
    } catch (e) {
        stage('notify') {
            mail to: 'neon-notifications@kde.org',
                 subject: "Some package versions in ${TYPE}/${DIST} are too low #${BUILD_NUMBER}",
                 body: """Some package versions in ${TYPE}/${DIST} are too low #${BUILD_NUMBER}. ${BUILD_URL}/testReport"""
        }
        throw e
    }
}

def cleanNode(label = null, body) {
  node(label) {
    deleteDir()
    try {
      wrap([$class: 'AnsiColorBuildWrapper', colorMapName: 'xterm']) {
        wrap([$class: 'TimestamperBuildWrapper']) {
          body()
        }
      }
    } finally {
      step([$class: 'WsCleanup', cleanWhenFailure: true])
    }
  }
}
